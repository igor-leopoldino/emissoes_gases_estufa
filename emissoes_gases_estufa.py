# -*- coding: utf-8 -*-
"""emissoes_gases_estufa.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jxzdQozgXaBXL2lnZZgjoyJiv0NmyIyF
"""

import pandas as pd

url = '/content/drive/MyDrive/1-SEEG10_GERAL-BR_UF_2022.10.27-FINAL-SITE.xlsx'

pd.read_excel(url, sheet_name='GEE Estados').head()

emissoes_gases = pd.read_excel(url, sheet_name='GEE Estados')

emissoes_gases.info()

emissoes_gases['Emissão / Remoção / Bunker'].unique()

(emissoes_gases['Emissão / Remoção / Bunker'] == 'Remoção NCI') | (emissoes_gases['Emissão / Remoção / Bunker'] == 'Remoção')

emissoes_gases[emissoes_gases['Emissão / Remoção / Bunker'].isin(['Remoção NCI', 'Remoção'])]

emissoes_gases.loc[emissoes_gases['Emissão / Remoção / Bunker'].isin(['Remoção NCI', 'Remoção']), 1970:2021]

emissoes_gases.loc[emissoes_gases['Emissão / Remoção / Bunker'].isin(['Remoção NCI', 'Remoção']), 1970:2021].max()

emissoes_gases.loc[emissoes_gases['Emissão / Remoção / Bunker'] == 'Bunker', 'Estado'].unique()

emissoes_gases = emissoes_gases[emissoes_gases['Emissão / Remoção / Bunker'] == 'Emissão']
emissoes_gases

emissoes_gases = emissoes_gases.drop(columns='Emissão / Remoção / Bunker')
emissoes_gases

emissoes_gases['Nível 1 - Setor'].unique()

emissoes_gases['Estado'].unique()

(emissoes_gases['Estado'] == 'RS') | (emissoes_gases['Estado'] == 'SC') | (emissoes_gases['Estado'] == 'PR')

emissoes_gases[(emissoes_gases['Estado'] == 'RS') | (emissoes_gases['Estado'] == 'SC') | (emissoes_gases['Estado'] == 'PR')]

emissoes_regiao_sul = emissoes_gases[(emissoes_gases['Estado'] == 'RS') | (emissoes_gases['Estado'] == 'SC') | (emissoes_gases['Estado'] == 'PR')]

emissoes_gases['Nível 1 - Setor'] == 'Mudança de Uso da Terra e Floresta'

emissoes_gases['Estado'] == 'AM'

(emissoes_gases['Nível 1 - Setor'] == 'Mudança de Uso da Terra e Floresta') & (emissoes_gases['Estado'] == 'AM')

emissoes_gases[(emissoes_gases['Nível 1 - Setor'] == 'Mudança de Uso da Terra e Floresta') & (emissoes_gases['Estado'] == 'AM')]

emissoes_gases['Atividade Econômica'].unique()

emissoes_amazonas = emissoes_gases[(emissoes_gases['Nível 1 - Setor'] == 'Mudança de Uso da Terra e Floresta') & (emissoes_gases['Estado'] == 'AM')]

(emissoes_gases['Atividade Econômica'] == 'AGROPEC') & (emissoes_gases['Estado'] == 'PA')

emissoes_gases[(emissoes_gases['Atividade Econômica'] == 'AGROPEC') & (emissoes_gases['Estado'] == 'PA')]

emissoes_gases.loc[(emissoes_gases['Atividade Econômica'] == 'AGROPEC') & (emissoes_gases['Estado'] == 'PA'), 2021].max()

emissoes_para = emissoes_gases.loc[(emissoes_gases['Atividade Econômica'] == 'AGROPEC') & (emissoes_gases['Estado'] == 'PA'), 2021].max()

emissoes_gases.loc[:, 'Nível 1 - Setor' : 'Produto'].columns

colunas_info = list(emissoes_gases.loc[:, 'Nível 1 - Setor' : 'Produto'].columns)

colunas_info

emissoes_gases.iloc[:,1970:2021].columns

colunas_emissao = list(emissoes_gases.loc[:,1970:2021].columns)

colunas_emissao

emissoes_gases.melt(id_vars=colunas_info, value_vars=colunas_emissao, var_name='Ano', value_name='Emissao')

emissoes_por_ano = emissoes_gases.melt(id_vars=colunas_info, value_vars=colunas_emissao, var_name='Ano', value_name='Emissão')

emissoes_por_ano.info()

emissoes_por_ano['Gás'].unique()

emissoes_por_ano.groupby('Gás')

emissoes_por_ano.groupby('Gás').groups

emissoes_por_ano.groupby('Gás').get_group('CO2 (t)')

emissoes_por_ano.groupby('Gás')['Emissão'].sum()

emissao_por_gas = emissoes_por_ano.groupby('Gás')[['Emissão']].sum().sort_values('Emissão', ascending=False)

emissao_por_gas

emissao_por_gas.plot(kind='barh', figsize=(10,8));

emissao_por_gas.iloc[0:9]

emissao_por_gas.iloc[0:9].sum() / emissao_por_gas.sum()

round(float((emissao_por_gas.iloc[0:9].sum() / emissao_por_gas.sum()).iloc[0])*100,2)

print(f'A emissão de CO2 corresponde a {round(((emissao_por_gas.iloc[0:9].sum() / emissao_por_gas.sum()).iloc[0])*100,2)} % de emissão total de gases estufa no Brasil de 1970 a 2021')

emissoes_por_ano.groupby('Nível 1 - Setor').groups

emissoes_por_ano.groupby('Nível 1 - Setor').get_group('Agropecuária')

emissoes_por_ano.groupby('Ano').groups

emissoes_por_ano[emissoes_por_ano['Ano']==2021].groupby('Nível 1 - Setor')[['Emissão']].mean()

emissoes_por_ano.groupby('Nível 1 - Setor')[['Emissão']].sum().sort_values('Emissão', ascending=False)

gas_por_setor = emissoes_por_ano.groupby(['Gás', 'Nível 1 - Setor'])[['Emissão']].sum()

gas_por_setor

gas_por_setor.xs('CO2 (t)', level=0)

gas_por_setor.xs('CO2 (t)', level=0).max()

gas_por_setor.xs('CO2 (t)', level=0).idxmax()

gas_por_setor.groupby(level=0).idxmax()

gas_por_setor.groupby(level=0).max()

valores_max = gas_por_setor.groupby(level=0).max().values

tabela_sumarizada = gas_por_setor.groupby(level=0).idxmax()
tabela_sumarizada.insert(1, 'Quantidade de emissão', valores_max)

tabela_sumarizada

gas_por_setor.swaplevel(0,1)

gas_por_setor.swaplevel(0,1).groupby(level=0).idxmax()

emissoes_por_ano

emissoes_por_ano.groupby('Ano')[['Emissão']].mean().plot(figsize = (10, 6));

emissoes_por_ano.groupby('Ano')[['Emissão']].mean().idxmax()

emissoes_por_ano.groupby(['Ano', 'Gás'])[['Emissão']].mean()

media_emissao_anual = emissoes_por_ano.groupby(['Ano', 'Gás'])[['Emissão']].mean().reset_index()

media_emissao_anual

media_emissao_anual = media_emissao_anual.pivot_table(index='Ano', columns='Gás', values='Emissão')

media_emissao_anual

media_emissao_anual.plot(subplots = True, figsize=(10,40));

emissoes_por_ano

emissoes_por_ano.pivot_table(index='Ano', columns='Nível 1 - Setor', values='Emissão')

media_por_setor = emissoes_por_ano.pivot_table(index='Ano', columns='Nível 1 - Setor', values='Emissão',aggfunc='mean')

media_por_setor.plot(subplots=True,figsize=(15,10));

emissoes_por_ano.groupby(['Estado', 'Nível 1 - Setor'])[['Emissão']].sum()

emissoes_por_estado = emissoes_por_ano.groupby(['Estado', 'Nível 1 - Setor'])[['Emissão']].sum()

emissoes_por_estado.xs('Energia', level=1)

emissoes_por_estado.xs('MG', level=0).max()

emissoes_por_estado.xs('MG', level=0).idxmax()

emissoes_por_estado.groupby(level=0).max()

grafico_emissoes_por_estado = emissoes_por_estado.groupby(level=0).max()

grafico_emissoes_por_estado.plot(kind='bar', figsize=(10,5));

emissoes_por_estado.groupby(level=0).idxmax()

emissoes_por_estado.groupby(level=1).idxmax()

url_2 = '/content/drive/MyDrive/POP2022_Municipios.xls'

pd.read_excel(url_2)

pd.read_excel(url_2, header=1)

pd.read_excel(url_2, header=1, skipfooter=34)

populacao_estados = pd.read_excel(url_2, header=1, skipfooter=34)

populacao_estados.info()

populacao_estados.groupby('UF').sum(numeric_only=True)

populacao_estados[populacao_estados['POPULAÇÃO'].str.contains('\(', na = False)]

populacao_estados = populacao_estados.assign(populacao_sem_parenteses = populacao_estados['POPULAÇÃO'].replace('\(\d{1,2}\)', '', regex = True),\
                                             populacao = lambda x: x.loc[:, 'populacao_sem_parenteses'].replace('\.', '', regex = True))

populacao_estados

populacao_estados[populacao_estados['POPULAÇÃO'].str.contains('\(', na = False)]

populacao_estados = populacao_estados.astype({'populacao':'int64'})

populacao_estados.groupby('UF')[['populacao']].sum().reset_index()

populacao_estados = populacao_estados.groupby('UF')[['populacao']].sum().reset_index()

emissao_estados = emissoes_por_ano[emissoes_por_ano['Ano'] == 2021].groupby('Estado')[['Emissão']].sum().reset_index()

emissao_estados

dados_agrupados = pd.merge(emissao_estados, populacao_estados, left_on='Estado', right_on='UF')

dados_agrupados

dados_agrupados.plot(x='populacao', y='Emissão', kind='scatter', figsize=(8,6));

import plotly.express as px

px.scatter(dados_agrupados, x='populacao', y='Emissão', text='Estado', opacity=0)

dados_agrupados = dados_agrupados.assign(emissao_per_capita = dados_agrupados['Emissão']/dados_agrupados['populacao']).sort_values('emissao_per_capita', ascending=False)

dados_agrupados

px.bar(dados_agrupados, x='Estado', y='emissao_per_capita')

px.scatter(dados_agrupados, x='populacao', y='Emissão', text='Estado', size='emissao_per_capita')

